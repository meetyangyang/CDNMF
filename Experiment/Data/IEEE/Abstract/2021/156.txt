This article deals with reconfigurable uniprocessor systems powered by a renewable energy source under real-time and resource sharing constraints. A reconfigurable system is defined as a set of implementations;  each of which is encoded by real-time periodic software tasks. Reconfiguration is a flexible runtime scenario that adapts the current systemâ€™s implementation to any related environment evolution under well-defined conditions. A task is characterized by an effective calculated deadline that should be less than a maximum deadline defined in user requirements. The main problem is how to calculate the effective deadlines of the different periodic tasks in the different implementations under possibly the predicted renewable energy source and the sharing of resource constraints. We propose an offline method based on three solutions to calculate the deadlines of tasks. The first serves to compute the deadlines ensuring the real-time system feasibility and also minimizes the number of context switches by assigning the highest priority to the task with the smallest maximum deadline. The second computes the deadlines ensuring the respect of energy constraints;  and the third computes the deadlines ensuring the respect of resource sharing constraints. These three solutions calculate the possible deadlines of each task in the hyperperiod of the corresponding implementations. We develop a new simulator called DEAD-CALC;  that integrates a new tool called RANDOM-TASK for applying and evaluating the proposed solutions. The conducted experimentation proves that this methodology provides deadlines with affecting neither the load nor the processor speed while reducing the calculation time. \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>