In this paper;  adaptive hybrid genetic algorithms (AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>0</sub>\n ~ AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>3</sub>\n) are proposed for the sequence-dependent setup times permutation flow shop scheduling problem with the objectives to minimize makespan and total weighted tardiness;  both of which will be considered separately. Each job is assigned an introduced inheriting factor;  which indicates the probability that the job is copied to the same position of the offspring individual during crossover and is dynamically updated. Good genes and bad genes can be mined by inheriting factors. Probability-based Multi-Point Crossover (PMPC) is constructed to inherit good genes with high probabilities to the offspring and destroy bad genes with high probabilities. Inheriting factors determine such probabilities and the genetic algorithm evolves adaptively and is denoted as AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>0</sub>\n. Three local search methods (LS1;  LS2;  and LS3) are separately integrated with AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>0</sub>\n and three hybrid algorithms AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>1</sub>\n ~ AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>3</sub>\n are developed. Compared with GA_RMA and CPSO (effective algorithms without integrating any local search);  AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>0</sub>\n is the most effective. Another six hybrid algorithms are extended from IG_RS (the current best algorithm for the two considered problems) and CPSO by integrating with the three local search methods and they are compared with AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>1</sub>\n ~ AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>3</sub>\n comprehensively. Experimental results show that for the two considered problems;  AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>1</sub>\n outperforms the other algorithms on small setup-time instances and AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>3</sub>\n is the most effective algorithm among the compared ones on big setup-time instances;  while the computation time of AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>1</sub>\n is moderate among the LS1 integrated algorithms;  so is AHA\n<sub xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>3</sub>\n. The effects of the key factors or parameters on algorithms are analyzed as well. 