We examine a scheduling problem of cluster tools that concurrently process two wafer types in a cyclic operational sequence. Whereas the process steps for different wafer types are assigned to different processing modules (PMs);  the wafer loading and unloading tasks at the PMs are performed by a single robot. For a given cycle plan;  which is a mix of different wafers for each cycle;  we wish to determine the robot task sequence so as to minimize the tool cycle time. When a single wafer type is processed;  the backward and swap sequences are optimal for single-armed and dual-armed tools;  respectively. They are being prevalently used because of their simplicity and robustness. To maintain such advantages in concurrent processing;  we introduce and define the concurrent backward and swap sequences (CBSs and CSSs;  respectively). We then develop conditions on process times;  robot task times;  and the number of wafers produced in a cycle for which such CBSs and CSSs are still optimal for concurrent processing. We also show that;  for some special cases;  the two wafer types can achieve their maximum throughput rates as if each wafer type exclusively uses the tool regardless of other wafer types in progress. When the developed conditions do not hold;  an effective mixed integer programming (MIP) model based on the CBSs and CSSs is used for robot task sequencing. Finally;  we experimentally verify its efficiency and effectiveness by comparing to the existing scheduling methods for optimal scheduling of cluster tools. 