Robotized cluster tools for semiconductor manufacturing have strict time constraints such that a wafer processed at a processing chamber should be unloaded within a specified time limit. Otherwise;  it has a serious quality problem due to residual gases and heat within the chamber. Even though there have been studies on identifying a feasible tool operation schedule over such time constraints on wafer delays;  such a schedule is subject to timing disruptions or time variation;  and thus may violate the time constraints. In this study;  we propose a more robust method of regulating wafer delays against timing disruptions not to exceed a specified limit. We first model the discrete-event behavior of a tool by a timed event graph. We then develop a feedback controller for single-armed and dual-armed cluster tools that can satisfy the time constraints by regulating wafer delays. To do this;  we develop a feedback controller for the timed event graph by analyzing the timing behavior in a linear system model based on the max-plus algebra. The feedback controller postpones an event or firing of a transition;  i.e.;  loading a wafer into a chamber;  until a properly determined time elapses after an associated preceding event occurs. Finally;  we present examples of feedback control and show that the feedback control is quite robust even under persistent time variation. Wafer delay within a processing chamber after processing is critical to wafer quality variation or failures due to residual gases and heat within the chamber. Although there have been theoretical studies on scheduling tools to control wafer delays;  they are not easy to implement for real tool operation. It is because it is not easy to change the tool operation sequence;  which is determined by considering many other factors;  and a feasible schedule determined under some assumptions is also subject to frequent timing disruptions. We therefore use a simple feedback control method that can keep the current tool operation sequence and is robust against timing disruptions. It can be implemented by a small change in a tool scheduler. 