An iterated greedy algorithm (IGA) is a simple and powerful heuristic algorithm. It is widely used to solve flow-shop scheduling problems (FSPs);  an important branch of production scheduling problems. IGA was first developed to solve an FSP in 2007. Since then;  various FSPs have been tackled by using IGA-based methods;  including basic IGA;  its variants;  and hybrid algorithms with IGA integrated. Up until now;  over 100 articles related to this field have been published. However;  to the best of our knowledge;  there is no existing tutorial or review paper of IGA. Thus;  we focus on FSPs and provide a tutorial and comprehensive literature review of IGA-based methods. First;  we introduce a framework of basic IGA and give an example to clearly show its procedure. To help researchers and engineers learn and apply IGA to their FSPs;  we provide an open platform to collect and share related materials. Then;  we make classifications of the solved FSPs according to their scheduling scenarios;  objective functions;  and constraints. Next;  we classify and introduce the specific methods and strategies used in each phase of IGA for FSPs. Besides;  we summarize IGA variants and hybrid algorithms with IGA integrated;  respectively. Finally;  we discuss the current IGA-based methods and already-solved FSP instances;  as well as some important future research directions according to their deficiency and open issues. \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>