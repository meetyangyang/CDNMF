In this research;  we examine \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>feedback control</i>\n-based cluster tool scheduling methods to maintain \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>consistent</i>\n wafer sojourn times when a tool is subject to \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>random disruptive events</i>\n. In our previous work;  we proposed a feedback control design that regulates wafer sojourn times not to exceed the upper limits on wafer delays in a deterministic processing environment. Although such a feedback controller may ensure that wafer delay upper limits are always satisfied;  it does not necessarily guarantee that the tool always restores its initial tool state after the occurrence of time disruptive events. This article thus further examines under which conditions a feedback controller enforces the wafer sojourn times to be \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>stabilized</i>\n in a \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>stochastic</i>\n processing environment with unexpected random time disruptions. \n<italic xmlns:mml=\http://www.w3.org/1998/Math/MathML\ xmlns:xlink=\http://www.w3.org/1999/xlink\>