Generalized algebraic deadlock avoidance policies (DAPs) for sequential resource allocation systems (RASs) have recently been proposed as an interesting extension of the class of algebraic DAPs;  that maintains the analytical representation and computational simplicity of the latter;  while it guarantees completeness with respect to the maximally permissive DAP. The authors' original work that introduced these policies also provided a design methodology for them;  but this methodology is limited by the fact that it necessitates the deployment of the entire state space of the considered RAS. Hence;  this paper seeks the development of an alternative computational tool that can support the synthesis of correct generalized algebraic DAPs;  while controlling the underlying computational complexity. More specifically;  the presented correctness verification test possesses the convenient form of a mixed integer programming (MIP) formulation that employs a number of variables and constraints polynomially related to the size of the underlying RAS;  and it can be readily solved through canned optimization software. Furthermore;  since generalized algebraic DAPs do not admit a convenient representation in the Petri net modeling framework;  an additional contribution of the presented results is that they effect the migration of the relevant past insights and developments with respect to simpler DAP classes;  from the representational framework of Petri nets to that of the Deterministic Finite-State Automata. 