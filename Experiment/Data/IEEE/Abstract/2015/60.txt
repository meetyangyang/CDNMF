Petri nets are useful for modeling and analyzing complex scheduling problems of automated manufacturing systems;  such as robotized cluster tools for semiconductor manufacturing and robot cells with diverse and complex tool architectures and scheduling requirements. While there are many scheduling works on cyclic operation cycles of such systems and their Petri net models;  automated manufacturing systems have significant noncyclic operation cycles. For instance;  cluster tools cannot repeat identical work cycles for start-up and close-down operations of a lot;  lot switching;  nonidentical wafers;  and too small lots. Such noncyclic scheduling problems can also be well modeled by timed Petri nets (TPNs) and can be solved by a branch and bound procedure that explores feasible states by branching and deleting the corresponding nodes in the reachability tree. The tree in general tends to be large;  which significantly limits the computational efficiency. The tree generates nodes for all feasible markings regardless of the time evolution information associated with token holding times or firing delays. In this paper;  we develop a way of significantly reducing the reachability tree by deleting the nodes or states that are infeasible in view of time evolution. To do this;  we propose a time-feasible reachability tree that generates only time-feasible solutions under the earliest starting policy. We then use it for a branch and bound procedure for scheduling a TPN. We demonstrate its computational efficiency improvement with linear cluster tool scheduling problems. 