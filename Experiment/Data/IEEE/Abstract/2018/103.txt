To maximize task scheduling performance and minimize nonreasonable task allocation in clouds;  this paper proposes a method based on a two-stage strategy. At the first stage;  a job classifier motivated by a Bayes classifier's design principle is utilized to classify tasks based on historical scheduling data. A certain number of virtual machines (VMs) of different types are accordingly created. This can save time of creating VMs during task scheduling. At the second stage;  tasks are matched with concrete VMs dynamically. Dynamic task scheduling algorithms are accordingly proposed. Experimental results show that they can effectively improve the cloud's scheduling performance and achieve the load balancing of cloud resources in comparison with existing methods. 