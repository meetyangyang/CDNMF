Assembly cells;  where multiple robots perform sets of tasks;  often face the challenge to minimize cycle time and avoid collisions. Collisions are avoided by introducing synchronization schemes among the robots;  preventing shared volumes of the workspaces to be simultaneously entered. Synchronization often increases the cycle time and makes the robot programming more difficult to generate;  adjust;  and maintain. In this paper;  we present a novel method to maximize throughput while eliminating all synchronizations among robots. We devise algorithms to minimize cycle time generating no intersection among robots at any time during their paths. First;  a surrogate model for minimizing cycle time is provided and solved to optimality: each task is assigned to a robot in a way that no collision occurs. Afterward;  the entire workspace is partitioned such that each robot's workspace is separated from the others. Finally;  robot paths are generated automatically in order to avoid collisions with the environment and remaining in their precomputed partitions. In the rare cases where some of these steps fail;  a feedback procedure redistributing the tasks or modifying the partitions is adopted. Furthermore;  since the surrogate model approximates cycle time;  several solutions are generated and evaluated based on better approximations of the model. The results are convincing: computational experience on different cases from the automotive industry shows that it is possible to generate programs where the robots never intersect with each other and achieve cycle times comparable to the ones generated allowing synchronization. 