We consider the serial batching scheduling problem in which a group of machines can process multiple jobs continuously to reduce the processing times of the second and subsequent jobs. The maximum batch size is finite. Since all jobs in the same batch are loaded and unloaded simultaneously;  a completed job has to wait for the others. We examine how to schedule all jobs to minimize the total completion time. If the batch size is only one;  i.e.;  a single job per batch;  the total processing time will be longer;  since no reduction in processing time is possible. As a consequence;  the total completion time will also be longer. On the other hand;  if the batch size is large;  the total completion time can be large. Each job has to wait until all jobs in the same batch are completed. We identify several optimality properties of the optimal batching sequence. These properties are used to develop a dynamic programming algorithm to optimize the batching sequences efficiently. The complexity of the proposed method depends only on the maximum batch size and the number of jobs. The improvement achieved with the proposed method when compared with two other batching rules is illustrated using two practical applications. 