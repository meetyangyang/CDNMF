The production system consisting of a batch processor in the upstream and a discrete processor in the downstream is common in practice. The batch processor first handles a group of jobs simultaneously. Then;  the jobs are released to a buffer to wait for the process on the discrete processor one by one. However;  the waiting time of the jobs in the buffer is often required to be limited according to the production requirements. For example;  after being heated in the heat-treatment oven;  the aerospace precision parts have to be processed on the machining equipment in limited waiting time to improve the processability in subsequent manufacturing. The semiconductor chips have to be packed in limited waiting time after baking to avoid getting wet. The incongruous production modes between the batch processor and discrete processor;  together with the limited waiting time constraint;  make such operations always the bottleneck in manufacturing. Efficient heuristics;  providing high-quality solutions with low time complexity;  are much preferred in practice for most of the complicated scheduling problems;  such as the scenarios described earlier. However;  the designing process of an effective heuristic is tedious;  and the heuristic is usually deeply customized for a certain production scenario. Genetic programming (GP) provides an inspiring approach to automatically generate sophisticated heuristics for complicated scheduling problems through evolutionary learning processes. By customizing a GP-based approach;  the designing process of heuristics is automated;  and some undetectable knowledge relations can be obtained to enhance the quality of heuristics. Such an approach facilitates to obtain more sophisticated schedules by analyzing valuable knowledge for smart manufacturing. The superiority of the heuristic learned by GP is shown in the computational experiment;  and it has great potential to be applied to the practical scheduling. 
