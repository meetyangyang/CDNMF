A typical case for bin covering is in food processing where food items are automatically sorted into trays of similar weight so that the overweight is minimized. Another application is in recycling, where items such as batteries should be put in crates of similar weight, so that the crates do not exceed a target weight due to later manual handling, but, at the same time, we want as few crates as possible. This is a bin packing problem. On an industrial scale, these tasks are fully automated. Though modern software toolâ€™s efficiency to solve bin sorting problems has increased significantly in later years, the problems are inherently tough in the sense that the solution time grows exponentially with the number of items. This limits the problem sizes that can be solved to optimality within a reasonable time. Therefore, much research has focused on heuristic rules that give reasonable solving times while not giving the true optimal number of bins. However, in many cases, the true optimal solution is preferable, and sometimes even necessary, so this is an industrially interesting problem. This article describes an approach to solve the bin packing and covering problems to the true optimum that increases the limit of the number of items that can typically be handled. This is done by observing that items of the same value need not be distinguished. Instead, we can formulate packing/covering problems over item values rather than individual items and sort integer numbers of these values into bins, which allows us to solve to optimum for more than 500 items in a reasonable time. In addition, by redefining what we mean by the same value, we can consider more items to have the same value and achieve even better calculation efficiency.
