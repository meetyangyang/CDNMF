Assembly cells in the automotive industries become more complex and there is a high pressure on both station throughput and robust robot programs requiring low maintenance costs. In this paper, we show that it is often possible to achieve both goals simultaneously. Specifically, we describe a method on how to generate robot programs performing predefined processing tasks, with the goal to minimize cycle time and to completely avoid synchronization among the robots. In fact, checking for interference volumes among robots increases robot programming time, leads to higher cycle time, requires reengineering when introducing new tasks, and causes restart problems when an unattended stop occurs in the cell. Therefore, we compute optimized surfaces that separate the workspaces of the robots and distribute all tasks, in order to, respectively, avoid collisions and minimize cycle time. This is done by modeling the problem as a semiassignment problem with collision constraints. The problem is then solved by combining several concepts, including combinatorial optimization and generalized Voronoi diagram. Results on different industrial test cases show the efficiency of the approach: no synchronization is needed and the robots can finish their programs in times comparable to when synchronization is allowed. As a consequence, no communication with programmable logic controllers is needed to avoid collisions between robots.
