In black-box software reuse, if a component does not satisfy user requirements in a new context,the developer has to abandon it and develop a new one, which is costly. The proposed method enables software reuse forblack-box reactive systems by combining learning-based testing (LBT) and supervisory control theory (SCT). LBT cantest whether the requirements hold in new settings and inferhypothesis models of the component at the same time. If thecomponent does not pass the test, the learned hypothesis is usedas a plant model to compute a supervisor using SCT. Then,a supervisory program is developed according to the controlactions of the supervisor to govern the system to follow thebehavior of the requirements. We illustrate the proposed methodthrough an example of a simple cruise control module. Theeffectiveness of the new method is demonstrated with a largersoftware component brake-by-wire with floating point data types.The case studies show not only the methodology of the newapproach but also a working tool chain to perform it.
