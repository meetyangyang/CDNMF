This paper was motivated by the observation that defects are still discovered in PLC software that has been running in a production environment for significant periods of time. Typically the defects are discovered when some operational parameters of a facility change or some infrequent series of inputs occurs, leading to behavior of the software that was never specified or tested. Manual testing of the complete software behavior is not feasible due to combinatorial explosion, which leads to excessive man hours required for testing all but the most trivial systems. The approach described here allows the automatic extraction of a state machine model from PLC software that has already been developed. This state machine includes the response of the software to all possible inputs in all possible states. The potential benefits afforded by this state machine model include the ability to use existing verification tools that allow us to present queries to the model and verify safety and reliability requirements, e.g., that a motor contactor can never be closed when an interlock signal is off.
