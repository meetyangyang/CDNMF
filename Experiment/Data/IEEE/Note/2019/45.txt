While the real-time management/scheduling of complex resource allocation systems (RASs)is a thriving area in general, the particular problem of schedulingsuch systems with extensive blocking and deadlocking effects intheir operation has received very limited attention. To a largeextent, this is due to the fact that the effective scheduling ofthis particular RAS class requires the initial resolution of anadditional problem, of a more combinatorial type, that concernsthe establishment of “liveness” for the underlying workflow,i.e., the ability of all the activated jobs to proceed to theircompletion securing successfully all the required resources forthe execution of their various processing stages, and avoidingthe formation of any deadlocks or livelocks. On the other hand,this problem of liveness enforcement for the considered RAS hasreceived extensive attention within a certain part of the controlscommunity during the past decades, and the currently available results provide a broad range of methods and policies forsupporting the necessary supervision. This paper combines theaforementioned results on the RAS liveness-enforcing supervisionwith a scheduling methodology that has been very popularin the context of other hard scheduling problems in order todevelop a complete scheduling methodology for the consideredRAS. Extensive numerical experimentation reported in thispaper demonstrates and assesses the efficacy of the presentedmethod. Finally, in an effort to provide more concrete andsimpler exposition for the presented developments, the resultsare presented in the operational context of a “capacitatedre-entrant line (CRL),” i.e., a particular RAS class modeling theoperation of RLs with finite buffering capacity at its variousworkstations.
