This paper presents a methodology and tool that enables a formal reasoning about the correctness of a reactive/control software written in Simulink/Stateflow through its translation into an automaton model. The discrete modeling formalism of an automaton extended with input/ouput/state variables suffices, since Simulink/Stateflow is a discrete-time system and the translated model preserves all the discrete-time behaviors. This work complements our earlier work that translated only the timedriven blocks; the event-driven components (Stateflow blocks) are also translated here.
