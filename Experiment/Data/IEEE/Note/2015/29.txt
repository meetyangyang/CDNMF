- Rapyuta allows to outsource some or all of a robot's onboard computational processes to a commercial data center. Its main difference to other;  similar frameworks like the Google App Engine is that it is specifically tailored towards multiprocess high-bandwidth robotics applications/middlewares and provides a well-documented open-source implementation that can be modified to cover a large variety of robotic scenarios. Rapyuta supports the outsourcing of almost all of the current 3000+ ROS packages out of the box and is easily extensible to other robotic middleware. A pre-installed Amazon Machine Image (AMI) is provided that allows to launch Rapyuta in any of Amazon's data center within minutes. Once launched;  robots can authenticate themselves to Rapyuta;  create one or more secured computational environments in the cloud and launch the desired nodes/processes. The computing environments can also be arbitrarily connected to build parallel computing architectures on the fly. The WebSocket-based communication protocol;  which provides synchronous and asynchronous communication mechanisms;  allows not only ROS based robots;  but also browsers and mobiles phones to connect to the ecosystem. Rapyuta's computing environments are private;  secure;  and optimized for data throughput. However;  its performance is in large part determined by the latency and quality of the network connection and the performance of the data center. Optimizing performance under these constraints is typically highly application-specific. The paper illustrates an example of performance optimization in a collaborative real-time 3-D mapping application. Other target applications include collaborative 3-D mapping;  task/grasp planning;  object recognition;  localization;  and teleoperation;  among others. 
