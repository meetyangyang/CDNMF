The stable and robust operation of manycontemporary technological applications, like flexibly automatedmanufacturing systems, industrial and urban intelligent transportation systems, and automated workflow management systems,necessitates the deployment of a control mechanism that willprevent the development of deadlock in the underlying resourceallocation. Two typical requests posed in the design of these controlmechanisms are i) that they are computationally efficient, so thatthey are effectively implementable in real time and ii) that theyimpose the minimal restrictions that will ensure deadlock-free operation, preserving, thus, the maximum possible flexibility in thesystem operation. In a recent work, we introduced such a controlmechanism, that is known as the class of generalized algebraicdeadlock avoidance policies (DAPs), and possesses the desirableproperties of i) admitting a computationally efficient representation and ii) encompassing the minimally restrictive deadlockavoidance policy for any given system configuration. However, currently we lack a computationally efficient methodology fordesigning generalized DAPs for any given resource allocationsystem (RAS). The results presented in this paper seek to coverthis need by developing a computationally efficient mechanismfor assessing the ability of tentative generalized DAPs to establishthe deadlock-free operation of some given RAS. The availabilityof such a tool will eventually enable the optimized design of generalized DAPs through its embedding in a search-based schemeborrowed from the area of combinatorial optimization; this lastissue is part of our current investigations.
