An assembly is a group of parts that fittogether to form a self-contained unit. Engines are assemblies andso are any sort of geometric puzzles having pieces that come apartand fit back together, to name two examples. Disassembly is the application of a sequence of motions that partition an assembly intoits parts, and for rigid parts, the reverse sequence gives us an assembly plan. A key problem in assembly planning is the assemblypartitioning problem: find a subset of a given assembly that can bemoved as a rigid body away from the stationary remaining partswithout collision. Assembly partitioning is a computationally difficult problem since, among others: (i) the search space is typicallyhuge, rendering the problem “officially” hard (some variants are,in computer science lingo, NP-complete) and (ii) the parts oftenmove in very close proximity to each other, requiring high degreeof accuracy—it is akin to planning the motion of a group of robotsin very tight passages.We solve a fundamental partitioning problem for polyhedralassemblies, allowing one translational motion in three-dimensionalspace. We harness tools developed in computational geometry inrecent years to give a complete implementation and exemplifythe effectiveness of our approach on three nontrivial assemblyinstances. The tools that we are using are publicly available andwe hope that these and similar tools will pave the way to solvingmore involved problems in assembly planning in particular and inautomated manufacturing in general.
